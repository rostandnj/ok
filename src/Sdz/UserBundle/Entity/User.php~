<?php

namespace Sdz\UserBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\EquatableInterface;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * @ORM\Entity(repositoryClass="OC\UserBundle\Entity\UserRepository")
 */
class User implements UserInterface, \Serializable
{
    /**
   * @ORM\Column(name="id", type="integer")
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="AUTO")
   */
    private $id;

    /**
    * @ORM\Column(name="username", type="string", length=50, unique=true)
    */
    private $username;

    /**
    * @ORM\Column(name="password", type="string", length=255)
    */
    private $password;

    /**
    * @ORM\Column(name="salt", type="string", length=255)
    */
    private $salt;

    /**
    * @ORM\ManytoMany(targetEntity="Sdz\UserBundle\Entity\Role",cascade={"persist"})
    */
    private $roles = array();

    /**
    * @ORM\OneToOne(targetEntity="Sdz\ATIBundle\Entity\Personnel",cascade={"persist"})
    * @ORM\JoinColumn(nullable=false)
    */
    private $personnel;

    public function __construct()
    {
        $this->roles = new ArrayCollection();
    }

    /**
    * @inheritDoc UserInterface
    */
    public function getRoles()
    {
        return $this->roles->toArray();
    }

    /**
    * @inheritDoc UserInterface
    */
    public function eraseCredentials()
    {
        
    }

    /**
    * @inheritDoc UserInterface
    */
    public function equals(UserInterface $user)
    {
        return $this->username === $user->getUsername();
    }

    /**
    * @inheritDoc \Serializable::serialize()
    */
    public function serialize()
    {
        return serialize (array($this->id,));
    }

    /**
    * @inheritDoc \Serializable::unserialize()
    */
    public function unserialize($serialized)
    {
        list ($this->id,) = unserialize($serialized);
    }




    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set username
     *
     * @param string $username
     * @return User
     */
    public function setUsername($username)
    {
        $this->username = $username;
    
        return $this;
    }

    /**
     * Get username
     *
     * @return string 
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Set password
     *
     * @param string $password
     * @return User
     */
    public function setPassword($password)
    {
        $this->password = $password;
    
        return $this;
    }

    /**
     * Get password
     *
     * @return string 
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Set salt
     *
     * @param string $salt
     * @return User
     */
    public function setSalt($salt)
    {
        $this->salt = $salt;
    
        return $this;
    }

    /**
     * Get salt
     *
     * @return string 
     */
    public function getSalt()
    {
        return $this->salt;
    }
}